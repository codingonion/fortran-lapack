#:include "common.fypp"
! Test eigendecomposition
module test_linalg_eig
    use stdlib_linalg_interface

    implicit none (type,external)

    contains

    !> SVD tests
    subroutine test_eig(error)
        logical, intent(out) :: error

        real :: t0,t1

        call cpu_time(t0)

        #:for rk,rt,ri in REAL_KINDS_TYPES
        call test_eig_${ri}$(error)
        if (error) return
        #: endfor

        call cpu_time(t1)

        print 1, 1000*(t1-t0), merge('SUCCESS','ERROR  ',.not.error)

        1 format('SVD tests completed in ',f9.4,' milliseconds, result=',a)

    end subroutine test_eig

    !> Real matrix svd
    #:for rk,rt,ri in REAL_KINDS_TYPES
    subroutine test_eig_${ri}$(error)
        logical,intent(out) :: error

        !> Reference solution
        real(${rk}$), parameter :: zero = 0.0_${rk}$
        real(${rk}$), parameter :: tol  = sqrt(epsilon(zero))

        !> Local variables
        type(linalg_state) :: state
        ${rt}$ :: A(3,3)
        complex(${rk}$) :: lambda(3)

        !> Initialize matrix
        A = reshape([1,0,0, &
                     0,2,0, &
                     0,0,3],[3,3])
        
        call eig(A,lambda,err=state)
        error = state%error() .or. &
                .not. all(aimag(lambda)==zero .and. real(lambda,kind=${rk}$)==[1,2,3])

        if (error) return

    end subroutine test_eig_${ri}$

    #:endfor


end module test_linalg_eig


